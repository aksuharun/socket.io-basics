body
	//css
	style.
		*{
			margin: 0;
			padding: 0; 
		}

		main{
			width: min(calc(100vw - 2rem), 600px);
			margin: auto;
			padding: 1rem;
		}
		#chat{
			border:2px solid grey;
			height: 20rem;
			margin: 1rem 0;
			overflow-y: scroll;
		}

		.message-box{
			list-style:none;
			padding:.5rem;
		}

		.message-box:nth-of-type(odd){
			background-color: #eee
		}

		.system-message-box{
			width: 10rem;
			margin:0.5rem auto;
			padding: .2rem;
			background-color:#ee7;
			border-radius: 4px;
			text-align: center;
			list-style: none;
		}

		#input{
			padding: .5rem;
			border-radius: 5px;
		}

		.bottom-bar{
			display:grid;
			grid-template-columns: minmax(300px ,4fr)	6rem 6rem;
			gap: .5rem
		}



	//html body
	main
		h1 Chat Room
		div#chat
		form(id="form" action="")
			.bottom-bar
				input(
					id="input"
					placeholder="enter a message"
					autocomplate="off"
					)
				button Send
				button#toggle-btn Disconnect

	script(src="https://cdn.socket.io/4.7.4/socket.io.min.js")
	script.
		const socket = io();

		const form = document.getElementById('form') 
		const input = document.getElementById('input') 
		const chat = document.getElementById('chat')
		const toggleBtn = document.getElementById('toggle-btn')

		form.addEventListener('submit', (e) => {
			e.preventDefault()
			if(input.value) {
				socket.emit('chat-message:', input.value)
				input.value = ''
			}
		})

		socket.on('chat-message', (msg) => {
			item = document.createElement('li')
			item.classList.add('message-box')
			item.textContent = msg
			chat.appendChild(item)

		})

		socket.on('system-message', (msg) => {
			console.log(msg)
			item = document.createElement('li')
			item.classList.add('system-message-box')
			item.textContent = msg
			chat.appendChild(item)
		})

		toggleBtn.addEventListener('click', (e) => {
			e.preventDefault()

			if(socket.connected) {
				toggleBtn.innerText = 'Connect'
				socket.disconnect()
			} else {
				toggleBtn.innerText = 'Disconnect'
				socket.connect()
			}
		})